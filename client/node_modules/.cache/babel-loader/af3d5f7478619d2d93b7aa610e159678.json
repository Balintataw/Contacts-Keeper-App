{"ast":null,"code":"import _slicedToArray from \"/Users/Jossendal/Desktop/projects/contacts-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jossendal/Desktop/projects/contacts-keeper/client/src/context/contact/ContactState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport ContactContext from './contactContext';\nimport ContactReducer from './ContactReducer';\nimport { ADD_CONTACT, GET_CONTACTS, CLEAR_CONTACTS, START_LOADING, DELETE_CONTACT, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER, CONTACT_ERROR } from '../types';\n\nconst ContactState = props => {\n  const initialState = {\n    contacts: [],\n    current: null,\n    filtered: null,\n    error: null,\n    loading: false\n  };\n\n  const _useReducer = useReducer(ContactReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Get Contacts\n\n\n  const getContacts = async () => {\n    dispatch({\n      type: START_LOADING\n    });\n\n    try {\n      const res = await axios.get('/api/contacts');\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (error) {\n      console.error('Error getting contacts', error);\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.msg\n      });\n    }\n  }; // Add Contact\n\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: ADD_CONTACT,\n        payload: res.data\n      });\n    } catch (error) {\n      console.error('Error adding contact', error);\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: error.response.msg\n      });\n    }\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  }; // Set current contact\n\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  }; // Clear current contact\n\n\n  const clearCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  }; // update contact\n\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  }; // filter contacts\n\n\n  const filterContacts = text => {\n    dispatch({\n      type: FILTER_CONTACTS,\n      payload: text\n    });\n  }; // clear filter\n\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  return React.createElement(ContactContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filtered: state.filtered,\n      loading: state.loading,\n      error: state.error,\n      getContacts,\n      addContact,\n      deleteContact,\n      setCurrent,\n      clearCurrent,\n      updateContact,\n      filterContacts,\n      clearFilter\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default ContactState;","map":{"version":3,"sources":["/Users/Jossendal/Desktop/projects/contacts-keeper/client/src/context/contact/ContactState.js"],"names":["React","useReducer","axios","ContactContext","ContactReducer","ADD_CONTACT","GET_CONTACTS","CLEAR_CONTACTS","START_LOADING","DELETE_CONTACT","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","CONTACT_ERROR","ContactState","props","initialState","contacts","current","filtered","error","loading","state","dispatch","getContacts","type","res","get","payload","data","console","response","msg","addContact","contact","config","headers","post","deleteContact","id","setCurrent","clearCurrent","updateContact","filterContacts","text","clearFilter","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\n\nimport ContactContext from './contactContext';\nimport ContactReducer from './ContactReducer';\n\nimport {\n    ADD_CONTACT,\n    GET_CONTACTS,\n    CLEAR_CONTACTS,\n    START_LOADING,\n    DELETE_CONTACT,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER,\n    CONTACT_ERROR,\n} from '../types';\n\nconst ContactState = props => {\n    const initialState = {\n        contacts: [],\n        current: null,\n        filtered: null,\n        error: null,\n        loading: false,\n    };\n\n    const [state, dispatch] = useReducer(ContactReducer, initialState);\n    // Get Contacts\n    const getContacts = async () => {\n        dispatch({ type: START_LOADING });\n        try {\n            const res = await axios.get('/api/contacts');\n            dispatch({ type: GET_CONTACTS, payload: res.data });\n        } catch (error) {\n            console.error('Error getting contacts', error);\n            dispatch({ type: CONTACT_ERROR, payload: error.response.msg });\n        }\n    };\n    // Add Contact\n    const addContact = async contact => {\n        const config = {\n            headers: { 'Content-Type': 'application/json' },\n        };\n        try {\n            const res = await axios.post('/api/contacts', contact, config);\n            dispatch({ type: ADD_CONTACT, payload: res.data });\n        } catch (error) {\n            console.error('Error adding contact', error);\n            dispatch({ type: CONTACT_ERROR, payload: error.response.msg });\n        }\n    };\n    // Delete Contact\n    const deleteContact = id => {\n        dispatch({ type: DELETE_CONTACT, payload: id });\n    };\n    // Set current contact\n    const setCurrent = contact => {\n        dispatch({ type: SET_CURRENT, payload: contact });\n    };\n    // Clear current contact\n    const clearCurrent = () => {\n        dispatch({ type: CLEAR_CURRENT });\n    };\n    // update contact\n    const updateContact = contact => {\n        dispatch({ type: UPDATE_CONTACT, payload: contact });\n    };\n    // filter contacts\n    const filterContacts = text => {\n        dispatch({ type: FILTER_CONTACTS, payload: text });\n    };\n    // clear filter\n    const clearFilter = () => {\n        dispatch({ type: CLEAR_FILTER });\n    };\n    return (\n        <ContactContext.Provider\n            value={{\n                contacts: state.contacts,\n                current: state.current,\n                filtered: state.filtered,\n                loading: state.loading,\n                error: state.error,\n                getContacts,\n                addContact,\n                deleteContact,\n                setCurrent,\n                clearCurrent,\n                updateContact,\n                filterContacts,\n                clearFilter,\n            }}\n        >\n            {props.children}\n        </ContactContext.Provider>\n    );\n};\n\nexport default ContactState;\n"]},"metadata":{},"sourceType":"module"}