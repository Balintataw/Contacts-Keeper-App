{"ast":null,"code":"import _objectSpread from \"/Users/Jossendal/Desktop/projects/contacts-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { ADD_CONTACT, GET_CONTACTS, CLEAR_CONTACTS, DELETE_CONTACT, CONTACT_ERROR, SET_CURRENT, CLEAR_CURRENT, UPDATE_CONTACT, FILTER_CONTACTS, CLEAR_FILTER } from '../types';\nexport default ((state, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case GET_CONTACTS:\n      return _objectSpread({}, state, {\n        contacts: payload,\n        loading: false\n      });\n\n    case ADD_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: [...state.contacts, payload],\n        loading: false\n      });\n\n    case DELETE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.filter(contact => contact._id !== payload),\n        loading: false\n      });\n\n    case CONTACT_ERROR:\n      return _objectSpread({}, state, {\n        error: payload\n      });\n\n    case SET_CURRENT:\n      return _objectSpread({}, state, {\n        current: payload\n      });\n\n    case CLEAR_CURRENT:\n      return _objectSpread({}, state, {\n        current: null\n      });\n\n    case UPDATE_CONTACT:\n      return _objectSpread({}, state, {\n        contacts: state.contacts.map(contact => contact.id === payload._id ? payload : contact),\n        loading: false\n      });\n\n    case FILTER_CONTACTS:\n      return _objectSpread({}, state, {\n        filtered: state.contacts.filter(contact => {\n          const regex = new RegExp(\"\".concat(payload), 'gi');\n          return contact.name.match(regex) || contact.email.match(regex);\n        })\n      });\n\n    case CLEAR_FILTER:\n      return _objectSpread({}, state, {\n        filtered: null\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/Jossendal/Desktop/projects/contacts-keeper/client/src/context/contact/ContactReducer.js"],"names":["ADD_CONTACT","GET_CONTACTS","CLEAR_CONTACTS","DELETE_CONTACT","CONTACT_ERROR","SET_CURRENT","CLEAR_CURRENT","UPDATE_CONTACT","FILTER_CONTACTS","CLEAR_FILTER","state","type","payload","contacts","loading","filter","contact","_id","error","current","map","id","filtered","regex","RegExp","name","match","email"],"mappings":";AAAA,SACIA,WADJ,EAEIC,YAFJ,EAGIC,cAHJ,EAIIC,cAJJ,EAKIC,aALJ,EAMIC,WANJ,EAOIC,aAPJ,EAQIC,cARJ,EASIC,eATJ,EAUIC,YAVJ,QAWO,UAXP;AAaA,gBAAe,CAACC,KAAD,EAAQ;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAR,KAA8B;AACzC,UAAQD,IAAR;AACI,SAAKV,YAAL;AACI,+BACOS,KADP;AAEIG,QAAAA,QAAQ,EAAED,OAFd;AAGIE,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKd,WAAL;AACI,+BACOU,KADP;AAEIG,QAAAA,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBD,OAApB,CAFd;AAGIE,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKX,cAAL;AACI,+BACOO,KADP;AAEIG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeE,MAAf,CACNC,OAAO,IAAIA,OAAO,CAACC,GAAR,KAAgBL,OADrB,CAFd;AAKIE,QAAAA,OAAO,EAAE;AALb;;AAOJ,SAAKV,aAAL;AACI,+BACOM,KADP;AAEIQ,QAAAA,KAAK,EAAEN;AAFX;;AAIJ,SAAKP,WAAL;AACI,+BACOK,KADP;AAEIS,QAAAA,OAAO,EAAEP;AAFb;;AAIJ,SAAKN,aAAL;AACI,+BACOI,KADP;AAEIS,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKZ,cAAL;AACI,+BACOG,KADP;AAEIG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeO,GAAf,CAAmBJ,OAAO,IAChCA,OAAO,CAACK,EAAR,KAAeT,OAAO,CAACK,GAAvB,GAA6BL,OAA7B,GAAuCI,OADjC,CAFd;AAKIF,QAAAA,OAAO,EAAE;AALb;;AAOJ,SAAKN,eAAL;AACI,+BACOE,KADP;AAEIY,QAAAA,QAAQ,EAAEZ,KAAK,CAACG,QAAN,CAAeE,MAAf,CAAsBC,OAAO,IAAI;AACvC,gBAAMO,KAAK,GAAG,IAAIC,MAAJ,WAAcZ,OAAd,GAAyB,IAAzB,CAAd;AACA,iBACII,OAAO,CAACS,IAAR,CAAaC,KAAb,CAAmBH,KAAnB,KAA6BP,OAAO,CAACW,KAAR,CAAcD,KAAd,CAAoBH,KAApB,CADjC;AAGH,SALS;AAFd;;AASJ,SAAKd,YAAL;AACI,+BACOC,KADP;AAEIY,QAAAA,QAAQ,EAAE;AAFd;;AAIJ;AACI,aAAOZ,KAAP;AA5DR;AA8DH,CA/DD","sourcesContent":["import {\n    ADD_CONTACT,\n    GET_CONTACTS,\n    CLEAR_CONTACTS,\n    DELETE_CONTACT,\n    CONTACT_ERROR,\n    SET_CURRENT,\n    CLEAR_CURRENT,\n    UPDATE_CONTACT,\n    FILTER_CONTACTS,\n    CLEAR_FILTER,\n} from '../types';\n\nexport default (state, { type, payload }) => {\n    switch (type) {\n        case GET_CONTACTS:\n            return {\n                ...state,\n                contacts: payload,\n                loading: false,\n            };\n        case ADD_CONTACT:\n            return {\n                ...state,\n                contacts: [...state.contacts, payload],\n                loading: false,\n            };\n        case DELETE_CONTACT:\n            return {\n                ...state,\n                contacts: state.contacts.filter(\n                    contact => contact._id !== payload\n                ),\n                loading: false,\n            };\n        case CONTACT_ERROR:\n            return {\n                ...state,\n                error: payload,\n            };\n        case SET_CURRENT:\n            return {\n                ...state,\n                current: payload,\n            };\n        case CLEAR_CURRENT:\n            return {\n                ...state,\n                current: null,\n            };\n        case UPDATE_CONTACT:\n            return {\n                ...state,\n                contacts: state.contacts.map(contact =>\n                    contact.id === payload._id ? payload : contact\n                ),\n                loading: false,\n            };\n        case FILTER_CONTACTS:\n            return {\n                ...state,\n                filtered: state.contacts.filter(contact => {\n                    const regex = new RegExp(`${payload}`, 'gi');\n                    return (\n                        contact.name.match(regex) || contact.email.match(regex)\n                    );\n                }),\n            };\n        case CLEAR_FILTER:\n            return {\n                ...state,\n                filtered: null,\n            };\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}