{"ast":null,"code":"import _objectSpread from \"/Users/Jossendal/Desktop/projects/contacts-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/Jossendal/Desktop/projects/contacts-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jossendal/Desktop/projects/contacts-keeper/client/src/components/contacts/ContactForm.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactForm = () => {\n  const initialState = {\n    name: '',\n    email: '',\n    phone: '',\n    type: 'personal'\n  };\n\n  const _useState = useState(initialState),\n        _useState2 = _slicedToArray(_useState, 2),\n        contact = _useState2[0],\n        setContact = _useState2[1];\n\n  const name = contact.name,\n        email = contact.email,\n        phone = contact.phone,\n        type = contact.type;\n\n  const _useContext = useContext(ContactContext),\n        addContact = _useContext.addContact,\n        current = _useContext.current;\n\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact(initialState);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [current]);\n\n  const onChange = e => setContact(_objectSpread({}, contact, {\n    [e.target.name]: e.target.value\n  }));\n\n  const handleSubmit = () => {\n    addContact(contact);\n    setContact(initialState);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, current ? 'Edit Contact' : 'Add Contact'), React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: name,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    placeholder: \"Email\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"tel\",\n    placeholder: \"Phone\",\n    name: \"phone\",\n    value: phone,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Contact Type\"), React.createElement(\"div\", {\n    className: \"flex align-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"personal\",\n    checked: type === 'personal',\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Personal\"), React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"type\",\n    value: \"professional\",\n    checked: type === 'professional',\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"pl\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Professional\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: handleSubmit,\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, current ? 'Update Contact' : 'Add Contact')), current && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/Jossendal/Desktop/projects/contacts-keeper/client/src/components/contacts/ContactForm.js"],"names":["React","useContext","useState","useEffect","ContactContext","ContactForm","initialState","name","email","phone","type","contact","setContact","addContact","current","onChange","e","target","value","handleSubmit"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactForm = () => {\n    const initialState = {\n        name: '',\n        email: '',\n        phone: '',\n        type: 'personal',\n    };\n    const [contact, setContact] = useState(initialState);\n    const { name, email, phone, type } = contact;\n    const { addContact, current } = useContext(ContactContext);\n\n    useEffect(() => {\n        if (current !== null) {\n            setContact(current);\n        } else {\n            setContact(initialState);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [current]);\n    const onChange = e =>\n        setContact({ ...contact, [e.target.name]: e.target.value });\n\n    const handleSubmit = () => {\n        addContact(contact);\n        setContact(initialState);\n    };\n\n    return (\n        <div className='form'>\n            <h2 className='text-primary'>\n                {current ? 'Edit Contact' : 'Add Contact'}\n            </h2>\n            <input\n                type='text'\n                placeholder='Name'\n                name='name'\n                value={name}\n                onChange={onChange}\n            />\n            <input\n                type='email'\n                placeholder='Email'\n                name='email'\n                value={email}\n                onChange={onChange}\n            />\n            <input\n                type='tel'\n                placeholder='Phone'\n                name='phone'\n                value={phone}\n                onChange={onChange}\n            />\n            <h5>Contact Type</h5>\n            <div className='flex align-center'>\n                <input\n                    type='radio'\n                    name='type'\n                    value='personal'\n                    checked={type === 'personal'}\n                    onChange={onChange}\n                />\n                <span className='px'>Personal</span>\n                <input\n                    type='radio'\n                    name='type'\n                    value='professional'\n                    checked={type === 'professional'}\n                    onChange={onChange}\n                />\n                <span className='pl'>Professional</span>\n            </div>\n            <div>\n                <button\n                    onClick={handleSubmit}\n                    className='btn btn-primary btn-block'\n                >\n                    {current ? 'Update Contact' : 'Add Contact'}\n                </button>\n            </div>\n            {current && (\n                <div>\n                    <button className='btn btn-light btn-block' />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}