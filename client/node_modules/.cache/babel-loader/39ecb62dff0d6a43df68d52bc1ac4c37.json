{"ast":null,"code":"var _jsxFileName = \"/Users/Jossendal/Desktop/projects/contacts-keeper/client/src/components/contacts/Contacts.js\";\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactContext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\n\nconst Contacts = () => {\n  const _useContext = useContext(ContactContext),\n        contacts = _useContext.contacts,\n        filtered = _useContext.filtered,\n        getContacts = _useContext.getContacts;\n\n  useEffect(() => {\n    getContacts(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (contacts.length === 0) {\n    return React.createElement(\"h4\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Please add a contact\");\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(TransitionGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, filtered ? filtered.map(contact => React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    classNames: \"fade\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(ContactItem, Object.assign({}, contact, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })))) : contacts.map(contact => React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: 500,\n    classNames: \"fade\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(ContactItem, Object.assign({}, contact, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }))))));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["/Users/Jossendal/Desktop/projects/contacts-keeper/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","CSSTransition","TransitionGroup","ContactContext","ContactItem","Contacts","contacts","filtered","getContacts","length","textAlign","map","contact","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA,sBACyBN,UAAU,CAACI,cAAD,CADnC;AAAA,QACXG,QADW,eACXA,QADW;AAAA,QACDC,QADC,eACDA,QADC;AAAA,QACSC,WADT,eACSA,WADT;;AAGnBR,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,WAAW,GADC,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT;;AAKA,MAAIF,QAAQ,CAACG,MAAT,KAAoB,CAAxB,EAA2B;AACvB,WAAO;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH;;AACD,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,QAAQ,GACHA,QAAQ,CAACI,GAAT,CAAaC,OAAO,IAChB,oBAAC,aAAD;AACI,IAAA,GAAG,EAAEA,OAAO,CAACC,GADjB;AAEI,IAAA,OAAO,EAAE,GAFb;AAGI,IAAA,UAAU,EAAC,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,WAAD,oBAAiBD,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALJ,CADJ,CADG,GAUHN,QAAQ,CAACK,GAAT,CAAaC,OAAO,IAChB,oBAAC,aAAD;AACI,IAAA,GAAG,EAAEA,OAAO,CAACC,GADjB;AAEI,IAAA,OAAO,EAAE,GAFb;AAGI,IAAA,UAAU,EAAC,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,WAAD,oBAAiBD,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALJ,CADJ,CAXV,CADJ,CADJ;AAyBH,CApCD;;AAsCA,eAAeP,QAAf","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactContext from '../../context/contact/contactContext';\n\nimport ContactItem from './ContactItem';\nconst Contacts = () => {\n    const { contacts, filtered, getContacts } = useContext(ContactContext);\n\n    useEffect(() => {\n        getContacts();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (contacts.length === 0) {\n        return <h4 style={{ textAlign: 'center' }}>Please add a contact</h4>;\n    }\n    return (\n        <Fragment>\n            <TransitionGroup>\n                {filtered\n                    ? filtered.map(contact => (\n                          <CSSTransition\n                              key={contact._id}\n                              timeout={500}\n                              classNames='fade'\n                          >\n                              <ContactItem {...contact} />\n                          </CSSTransition>\n                      ))\n                    : contacts.map(contact => (\n                          <CSSTransition\n                              key={contact._id}\n                              timeout={500}\n                              classNames='fade'\n                          >\n                              <ContactItem {...contact} />\n                          </CSSTransition>\n                      ))}\n            </TransitionGroup>\n        </Fragment>\n    );\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}