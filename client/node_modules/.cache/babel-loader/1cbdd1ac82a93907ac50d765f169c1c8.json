{"ast":null,"code":"var _jsxFileName = \"/Users/Jossendal/Desktop/projects/contacts-keeper/client/src/components/contacts/Contacts.js\";\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactContext from '../../context/contact/contactContext';\nimport Spinner from '../layouts/Spinner';\nimport ContactItem from './ContactItem';\nimport { setAuthToken } from './utils';\n\nif (localStorage.token) {\n  console.log('SETTING TOKEN', localStorage.token);\n  setAuthToken(localStorage.token);\n}\n\nconst Contacts = () => {\n  const _useContext = useContext(ContactContext),\n        contacts = _useContext.contacts,\n        filtered = _useContext.filtered,\n        getContacts = _useContext.getContacts,\n        loading = _useContext.loading;\n\n  useEffect(() => {\n    getContacts();\n    console.log('CALL getContacts()', contacts, loading); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (loading) {\n    return React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  } else if (contacts.length) {\n    return React.createElement(\"div\", {\n      style: {\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        height: '70vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(TransitionGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, filtered ? filtered.map(contact => React.createElement(CSSTransition, {\n      key: contact._id,\n      timeout: 500,\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(ContactItem, Object.assign({}, contact, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })))) : contacts.map(contact => React.createElement(CSSTransition, {\n      key: contact._id,\n      timeout: 500,\n      classNames: \"fade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(ContactItem, Object.assign({}, contact, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }))))));\n  } else {\n    return React.createElement(\"h4\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Please add a contact\");\n  }\n};\n\nexport default Contacts;","map":{"version":3,"sources":["/Users/Jossendal/Desktop/projects/contacts-keeper/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","useEffect","CSSTransition","TransitionGroup","ContactContext","Spinner","ContactItem","setAuthToken","localStorage","token","console","log","Contacts","contacts","filtered","getContacts","loading","length","overflowX","overflowY","height","map","contact","_id","textAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AAEA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,YAAT,QAA6B,SAA7B;;AACA,IAAIC,YAAY,CAACC,KAAjB,EAAwB;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,YAAY,CAACC,KAA1C;AACAF,EAAAA,YAAY,CAACC,YAAY,CAACC,KAAd,CAAZ;AACH;;AAED,MAAMG,QAAQ,GAAG,MAAM;AAAA,sBACkCZ,UAAU,CAC3DI,cAD2D,CAD5C;AAAA,QACXS,QADW,eACXA,QADW;AAAA,QACDC,QADC,eACDA,QADC;AAAA,QACSC,WADT,eACSA,WADT;AAAA,QACsBC,OADtB,eACsBA,OADtB;;AAKnBf,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,WAAW;AACXL,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCE,QAAlC,EAA4CG,OAA5C,EAFY,CAGZ;AACH,GAJQ,EAIN,EAJM,CAAT;;AAMA,MAAIA,OAAJ,EAAa;AACT,WAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAEO,IAAIH,QAAQ,CAACI,MAAb,EAAqB;AACxB,WACI;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,SAAS,EAAE,QADR;AAEHC,QAAAA,SAAS,EAAE,MAFR;AAGHC,QAAAA,MAAM,EAAE;AAHL,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,QAAQ,GACHA,QAAQ,CAACO,GAAT,CAAaC,OAAO,IAChB,oBAAC,aAAD;AACI,MAAA,GAAG,EAAEA,OAAO,CAACC,GADjB;AAEI,MAAA,OAAO,EAAE,GAFb;AAGI,MAAA,UAAU,EAAC,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,oBAAC,WAAD,oBAAiBD,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALJ,CADJ,CADG,GAUHT,QAAQ,CAACQ,GAAT,CAAaC,OAAO,IAChB,oBAAC,aAAD;AACI,MAAA,GAAG,EAAEA,OAAO,CAACC,GADjB;AAEI,MAAA,OAAO,EAAE,GAFb;AAGI,MAAA,UAAU,EAAC,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI,oBAAC,WAAD,oBAAiBD,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALJ,CADJ,CAXV,CAPJ,CADJ;AA+BH,GAhCM,MAgCA;AACH,WAAO;AAAI,MAAA,KAAK,EAAE;AAAEE,QAAAA,SAAS,EAAE;AAAb,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH;AACJ,CAhDD;;AAkDA,eAAeZ,QAAf","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactContext from '../../context/contact/contactContext';\n\nimport Spinner from '../layouts/Spinner';\nimport ContactItem from './ContactItem';\nimport { setAuthToken } from './utils';\nif (localStorage.token) {\n    console.log('SETTING TOKEN', localStorage.token);\n    setAuthToken(localStorage.token);\n}\n\nconst Contacts = () => {\n    const { contacts, filtered, getContacts, loading } = useContext(\n        ContactContext\n    );\n\n    useEffect(() => {\n        getContacts();\n        console.log('CALL getContacts()', contacts, loading);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (loading) {\n        return <Spinner />;\n    } else if (contacts.length) {\n        return (\n            <div\n                style={{\n                    overflowX: 'hidden',\n                    overflowY: 'auto',\n                    height: '70vh',\n                }}\n            >\n                <TransitionGroup>\n                    {filtered\n                        ? filtered.map(contact => (\n                              <CSSTransition\n                                  key={contact._id}\n                                  timeout={500}\n                                  classNames='fade'\n                              >\n                                  <ContactItem {...contact} />\n                              </CSSTransition>\n                          ))\n                        : contacts.map(contact => (\n                              <CSSTransition\n                                  key={contact._id}\n                                  timeout={500}\n                                  classNames='fade'\n                              >\n                                  <ContactItem {...contact} />\n                              </CSSTransition>\n                          ))}\n                </TransitionGroup>\n            </div>\n        );\n    } else {\n        return <h4 style={{ textAlign: 'center' }}>Please add a contact</h4>;\n    }\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}