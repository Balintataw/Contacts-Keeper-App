{"ast":null,"code":"var _jsxFileName = \"/Users/Jossendal/Desktop/projects/contacts-keeper/client/src/components/contacts/Contacts.js\";\nimport React, { Fragment, useContext } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactContext from '../../context/contact/contactContext';\nimport ContactItem from './ContactItem';\n\nconst Contacts = () => {\n  const _useContext = useContext(ContactContext),\n        contacts = _useContext.contacts,\n        filtered = _useContext.filtered;\n\n  if (contacts.length === 0) {\n    return React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"Please add a contact\");\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(TransitionGroup, {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, filtered ? filtered.map(contact => React.createElement(CSSTransition, {\n    key: contact.id,\n    timeout: 400,\n    className: \"fade\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(ContactItem, Object.assign({}, contact, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  })))) : contacts.map(contact => React.createElement(CSSTransition, {\n    key: contact.id,\n    timeout: 400,\n    className: \"fade\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(ContactItem, Object.assign({}, contact, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }))))));\n};\n\nexport default Contacts;","map":{"version":3,"sources":["/Users/Jossendal/Desktop/projects/contacts-keeper/client/src/components/contacts/Contacts.js"],"names":["React","Fragment","useContext","CSSTransition","TransitionGroup","ContactContext","ContactItem","Contacts","contacts","filtered","length","map","contact","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;AACA,MAAMC,QAAQ,GAAG,MAAM;AAAA,sBACYL,UAAU,CAACG,cAAD,CADtB;AAAA,QACXG,QADW,eACXA,QADW;AAAA,QACDC,QADC,eACDA,QADC;;AAGnB,MAAID,QAAQ,CAACE,MAAT,KAAoB,CAAxB,EAA2B;AACvB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACH;;AACD,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,QAAQ,GACHA,QAAQ,CAACE,GAAT,CAAaC,OAAO,IAChB,oBAAC,aAAD;AACI,IAAA,GAAG,EAAEA,OAAO,CAACC,EADjB;AAEI,IAAA,OAAO,EAAE,GAFb;AAGI,IAAA,SAAS,EAAC,MAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,WAAD,oBAAiBD,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALJ,CADJ,CADG,GAUHJ,QAAQ,CAACG,GAAT,CAAaC,OAAO,IAChB,oBAAC,aAAD;AACI,IAAA,GAAG,EAAEA,OAAO,CAACC,EADjB;AAEI,IAAA,OAAO,EAAE,GAFb;AAGI,IAAA,SAAS,EAAC,MAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,WAAD,oBAAiBD,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALJ,CADJ,CAXV,CADJ,CADJ;AAyBH,CA/BD;;AAiCA,eAAeL,QAAf","sourcesContent":["import React, { Fragment, useContext } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport ContactContext from '../../context/contact/contactContext';\n\nimport ContactItem from './ContactItem';\nconst Contacts = () => {\n    const { contacts, filtered } = useContext(ContactContext);\n\n    if (contacts.length === 0) {\n        return <h4>Please add a contact</h4>;\n    }\n    return (\n        <Fragment>\n            <TransitionGroup className=''>\n                {filtered\n                    ? filtered.map(contact => (\n                          <CSSTransition\n                              key={contact.id}\n                              timeout={400}\n                              className='fade'\n                          >\n                              <ContactItem {...contact} />\n                          </CSSTransition>\n                      ))\n                    : contacts.map(contact => (\n                          <CSSTransition\n                              key={contact.id}\n                              timeout={400}\n                              className='fade'\n                          >\n                              <ContactItem {...contact} />\n                          </CSSTransition>\n                      ))}\n            </TransitionGroup>\n        </Fragment>\n    );\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}