{"ast":null,"code":"import _slicedToArray from \"/Users/Jossendal/Desktop/projects/contacts-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jossendal/Desktop/projects/contacts-keeper/client/src/context/auth/AuthState.js\";\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport AuthReducer from './AuthReducer';\nimport { setAuthToken } from '../../utils';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS, START_LOADING } from '../types';\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuth: localStorage.getItem('isAuth'),\n    user: JSON.parse(localStorage.getItem('user')),\n    loading: false,\n    error: null\n  };\n\n  const _useReducer = useReducer(AuthReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; //Loaded user\n\n\n  const loadUser = async () => {\n    dispatch({\n      type: START_LOADING\n    });\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      // load token into global axios header\n      setAuthToken(token);\n    }\n\n    try {\n      const res = await axios.get('/api/auth');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      console.error('Error creating user', err);\n      dispatch({\n        type: AUTH_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  }; //Register user\n\n\n  const register = async formData => {\n    dispatch({\n      type: START_LOADING\n    });\n    const config = {\n      headers: {\n        'Context-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data.token\n      });\n      loadUser();\n    } catch (err) {\n      console.error('Error creating user', err);\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //Login User\n\n\n  const login = async formData => {\n    dispatch({\n      type: START_LOADING\n    });\n    const config = {\n      headers: {\n        'Context-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/auth', formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data.token\n      });\n      loadUser();\n    } catch (err) {\n      console.error('Error logging in user', err);\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //Logout\n\n\n  const logout = () => {\n    dispatch({\n      type: LOGOUT\n    });\n  }; //Clear Errors\n\n\n  const clearErrors = () => {\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  };\n\n  return React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuth: state.isAuth,\n      user: state.user,\n      loading: state.loading,\n      error: state.error,\n      register,\n      loadUser,\n      login,\n      logout,\n      clearErrors\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/Users/Jossendal/Desktop/projects/contacts-keeper/client/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","AuthContext","AuthReducer","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","START_LOADING","AuthState","props","initialState","token","localStorage","getItem","isAuth","user","JSON","parse","loading","error","state","dispatch","loadUser","type","res","get","payload","data","err","console","response","msg","register","formData","config","headers","post","login","logout","clearErrors","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,SAASC,YAAT,QAA6B,aAA7B;AAEA,SACIC,gBADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,UAJJ,EAKIC,aALJ,EAMIC,UANJ,EAOIC,MAPJ,EAQIC,YARJ,EASIC,aATJ,QAUO,UAVP;;AAYA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACvB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADU;AAEjBC,IAAAA,MAAM,EAAEF,YAAY,CAACC,OAAb,CAAqB,QAArB,CAFS;AAGjBE,IAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAHW;AAIjBK,IAAAA,OAAO,EAAE,KAJQ;AAKjBC,IAAAA,KAAK,EAAE;AALU,GAArB;;AADuB,sBASGzB,UAAU,CAACG,WAAD,EAAca,YAAd,CATb;AAAA;AAAA,QAShBU,KATgB;AAAA,QASTC,QATS,oBAWvB;;;AACA,QAAMC,QAAQ,GAAG,YAAY;AACzBD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEhB;AAAR,KAAD,CAAR;AACA,UAAMI,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAIF,KAAJ,EAAW;AACP;AACAb,MAAAA,YAAY,CAACa,KAAD,CAAZ;AACH;;AACD,QAAI;AACA,YAAMa,GAAG,GAAG,MAAM7B,KAAK,CAAC8B,GAAN,CAAU,WAAV,CAAlB;AACAJ,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEtB,WAAR;AAAqByB,QAAAA,OAAO,EAAEF,GAAG,CAACG;AAAlC,OAAD,CAAR;AACH,KAHD,CAGE,OAAOC,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACV,KAAR,CAAc,qBAAd,EAAqCS,GAArC;AACAP,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAErB,UAAR;AAAoBwB,QAAAA,OAAO,EAAEE,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBI;AAA/C,OAAD,CAAR;AACH;AACJ,GAdD,CAZuB,CA2BvB;;;AACA,QAAMC,QAAQ,GAAG,MAAMC,QAAN,IAAkB;AAC/BZ,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEhB;AAAR,KAAD,CAAR;AACA,UAAM2B,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;;AAKA,QAAI;AACA,YAAMX,GAAG,GAAG,MAAM7B,KAAK,CAACyC,IAAN,CAAW,YAAX,EAAyBH,QAAzB,EAAmCC,MAAnC,CAAlB;AACAb,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAExB,gBAAR;AAA0B2B,QAAAA,OAAO,EAAEF,GAAG,CAACG,IAAJ,CAAShB;AAA5C,OAAD,CAAR;AACAW,MAAAA,QAAQ;AACX,KAJD,CAIE,OAAOM,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACV,KAAR,CAAc,qBAAd,EAAqCS,GAArC;AACAP,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEvB,aAAR;AAAuB0B,QAAAA,OAAO,EAAEE,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBI;AAAlD,OAAD,CAAR;AACH;AACJ,GAfD,CA5BuB,CA4CvB;;;AACA,QAAMM,KAAK,GAAG,MAAMJ,QAAN,IAAkB;AAC5BZ,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEhB;AAAR,KAAD,CAAR;AACA,UAAM2B,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;;AAKA,QAAI;AACA,YAAMX,GAAG,GAAG,MAAM7B,KAAK,CAACyC,IAAN,CAAW,WAAX,EAAwBH,QAAxB,EAAkCC,MAAlC,CAAlB;AACAb,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEpB,aAAR;AAAuBuB,QAAAA,OAAO,EAAEF,GAAG,CAACG,IAAJ,CAAShB;AAAzC,OAAD,CAAR;AACAW,MAAAA,QAAQ;AACX,KAJD,CAIE,OAAOM,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACV,KAAR,CAAc,uBAAd,EAAuCS,GAAvC;AACAP,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEnB,UAAR;AAAoBsB,QAAAA,OAAO,EAAEE,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBI;AAA/C,OAAD,CAAR;AACH;AACJ,GAfD,CA7CuB,CA6DvB;;;AACA,QAAMO,MAAM,GAAG,MAAM;AACjBjB,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAElB;AAAR,KAAD,CAAR;AACH,GAFD,CA9DuB,CAiEvB;;;AACA,QAAMkC,WAAW,GAAG,MAAM;AACtBlB,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEjB;AAAR,KAAD,CAAR;AACH,GAFD;;AAIA,SACI,oBAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHK,MAAAA,KAAK,EAAES,KAAK,CAACT,KADV;AAEHG,MAAAA,MAAM,EAAEM,KAAK,CAACN,MAFX;AAGHC,MAAAA,IAAI,EAAEK,KAAK,CAACL,IAHT;AAIHG,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAJZ;AAKHC,MAAAA,KAAK,EAAEC,KAAK,CAACD,KALV;AAMHa,MAAAA,QANG;AAOHV,MAAAA,QAPG;AAQHe,MAAAA,KARG;AASHC,MAAAA,MATG;AAUHC,MAAAA;AAVG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcK9B,KAAK,CAAC+B,QAdX,CADJ;AAkBH,CAxFD;;AA0FA,eAAehC,SAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport axios from 'axios';\n\nimport AuthContext from './authContext';\nimport AuthReducer from './AuthReducer';\n\nimport { setAuthToken } from '../../utils';\n\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    CLEAR_ERRORS,\n    START_LOADING,\n} from '../types';\n\nconst AuthState = props => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        isAuth: localStorage.getItem('isAuth'),\n        user: JSON.parse(localStorage.getItem('user')),\n        loading: false,\n        error: null,\n    };\n\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n    //Loaded user\n    const loadUser = async () => {\n        dispatch({ type: START_LOADING });\n        const token = localStorage.getItem('token');\n        if (token) {\n            // load token into global axios header\n            setAuthToken(token);\n        }\n        try {\n            const res = await axios.get('/api/auth');\n            dispatch({ type: USER_LOADED, payload: res.data });\n        } catch (err) {\n            console.error('Error creating user', err);\n            dispatch({ type: AUTH_ERROR, payload: err.response.data.msg });\n        }\n    };\n    //Register user\n    const register = async formData => {\n        dispatch({ type: START_LOADING });\n        const config = {\n            headers: {\n                'Context-Type': 'application/json',\n            },\n        };\n        try {\n            const res = await axios.post('/api/users', formData, config);\n            dispatch({ type: REGISTER_SUCCESS, payload: res.data.token });\n            loadUser();\n        } catch (err) {\n            console.error('Error creating user', err);\n            dispatch({ type: REGISTER_FAIL, payload: err.response.data.msg });\n        }\n    };\n    //Login User\n    const login = async formData => {\n        dispatch({ type: START_LOADING });\n        const config = {\n            headers: {\n                'Context-Type': 'application/json',\n            },\n        };\n        try {\n            const res = await axios.post('/api/auth', formData, config);\n            dispatch({ type: LOGIN_SUCCESS, payload: res.data.token });\n            loadUser();\n        } catch (err) {\n            console.error('Error logging in user', err);\n            dispatch({ type: LOGIN_FAIL, payload: err.response.data.msg });\n        }\n    };\n    //Logout\n    const logout = () => {\n        dispatch({ type: LOGOUT });\n    };\n    //Clear Errors\n    const clearErrors = () => {\n        dispatch({ type: CLEAR_ERRORS });\n    };\n\n    return (\n        <AuthContext.Provider\n            value={{\n                token: state.token,\n                isAuth: state.isAuth,\n                user: state.user,\n                loading: state.loading,\n                error: state.error,\n                register,\n                loadUser,\n                login,\n                logout,\n                clearErrors,\n            }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}