{"ast":null,"code":"import _slicedToArray from \"/Users/Jossendal/Desktop/projects/contacts-keeper/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Jossendal/Desktop/projects/contacts-keeper/client/src/context/alert/AlertState.js\";\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid/v4';\nimport AlertContext from './alertContext';\nimport AlertReducer from './AlertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = props => {\n  const initialState = [];\n\n  const _useReducer = useReducer(AlertReducer, initialState),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1]; // Set alert\n\n\n  const setAlert = (type, msg, timeout = 3000) => {\n    const id = uuid();\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        type,\n        msg,\n        id\n      }\n    });\n    setTimeout(() => {\n      dispatch({\n        type: REMOVE_ALERT,\n        payload: id\n      });\n    }, timeout);\n  };\n\n  return React.createElement(AlertContext.Provider, {\n    value: {\n      alerts: state.alerts,\n      setAlert\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AlertState;","map":{"version":3,"sources":["/Users/Jossendal/Desktop/projects/contacts-keeper/client/src/context/alert/AlertState.js"],"names":["React","useReducer","uuid","AlertContext","AlertReducer","SET_ALERT","REMOVE_ALERT","AlertState","props","initialState","state","dispatch","setAlert","type","msg","timeout","id","payload","setTimeout","alerts","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,UAAxC;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAMC,YAAY,GAAG,EAArB;;AADwB,sBAGER,UAAU,CAACG,YAAD,EAAeK,YAAf,CAHZ;AAAA;AAAA,QAGjBC,KAHiB;AAAA,QAGVC,QAHU,oBAKxB;;;AACA,QAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,GAAP,EAAYC,OAAO,GAAG,IAAtB,KAA+B;AAC5C,UAAMC,EAAE,GAAGd,IAAI,EAAf;AACAS,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAER,SAAR;AAAmBY,MAAAA,OAAO,EAAE;AAAEJ,QAAAA,IAAF;AAAQC,QAAAA,GAAR;AAAaE,QAAAA;AAAb;AAA5B,KAAD,CAAR;AAEAE,IAAAA,UAAU,CAAC,MAAM;AACbP,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAEP,YAAR;AAAsBW,QAAAA,OAAO,EAAED;AAA/B,OAAD,CAAR;AACH,KAFS,EAEPD,OAFO,CAAV;AAGH,GAPD;;AASA,SACI,oBAAC,YAAD,CAAc,QAAd;AACI,IAAA,KAAK,EAAE;AACHI,MAAAA,MAAM,EAAET,KAAK,CAACS,MADX;AAEHP,MAAAA;AAFG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKJ,KAAK,CAACY,QANX,CADJ;AAUH,CAzBD;;AA2BA,eAAeb,UAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport uuid from 'uuid/v4';\n\nimport AlertContext from './alertContext';\nimport AlertReducer from './AlertReducer';\n\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = props => {\n    const initialState = [];\n\n    const [state, dispatch] = useReducer(AlertReducer, initialState);\n\n    // Set alert\n    const setAlert = (type, msg, timeout = 3000) => {\n        const id = uuid();\n        dispatch({ type: SET_ALERT, payload: { type, msg, id } });\n\n        setTimeout(() => {\n            dispatch({ type: REMOVE_ALERT, payload: id });\n        }, timeout);\n    };\n\n    return (\n        <AlertContext.Provider\n            value={{\n                alerts: state.alerts,\n                setAlert,\n            }}\n        >\n            {props.children}\n        </AlertContext.Provider>\n    );\n};\n\nexport default AlertState;\n"]},"metadata":{},"sourceType":"module"}